var app=angular.module("RadCalc",["RadCalc.services","RadCalc.controllers"]);angular.module("RadCalc.controllers",[]).controller("XRayFormCtrl",function($scope,getDataService){function defaultTomographyExam(currentCount){return currentCount++,{study_num:currentCount,exam:"",scans:0,soc:!1,gender:"mixed",ede:0}}function countDecimalPlaces(value){var valueString=""+value,ary=valueString.split(".");return ary.length<2?0:ary[1].length}$scope.forms=[{id:"XRay",name:"X-ray Examinations",headers:["Study","Examination","# Scans","Standard of Care?","Gender Predominance","EDE(mSv)"],exams:[defaultTomographyExam(0)]}],$scope.addFields=function(form){form.exams.push(defaultTomographyExam(form.exams.length))},$scope.submit=function(form){console.log(form.exams)},$scope.socLabel=function(value){return value?"Yes":"No"},$scope.calculatedEDE=function(form,exam){if(""===exam.exam||void 0===exam.exam)return 0;var singleScanEDE=$scope.getProcedurePropertyValue(form.id,exam.exam,exam.gender);console.log("singleScanEDE: "+singleScanEDE);var digitCount=countDecimalPlaces(singleScanEDE);console.log("digitCount: "+digitCount);var adjustedEde=(singleScanEDE*exam.scans).toFixed(digitCount);return console.log("adjustedEde: "+adjustedEde),exam.ede=parseFloat(adjustedEde),exam.ede},$scope.getAllProcedures=function(categoryID){for(var categoryIndex in $scope.examData.DoseData){var category=$scope.examData.DoseData[categoryIndex];if(category.name==categoryID)return category.exams}},$scope.getProcedure=function(categoryID,procedureName){var allProcedures=$scope.getAllProcedures(categoryID);for(var procedureIndex in allProcedures){var procedure=allProcedures[procedureIndex];if(procedure.name==procedureName)return procedure}},$scope.getAllProcedureProperties=function(categoryID,procedureName){var procedure=$scope.getProcedure(categoryID,procedureName);return procedure.properties},$scope.getProcedurePropertyValue=function(categoryID,procedureName,genderPredominance){var properties=$scope.getAllProcedureProperties(categoryID,procedureName);for(var propertyIndex in properties){var property=properties[propertyIndex];if(property.gender==genderPredominance)return property.value}},$scope.examData={},getDataService.getData().then(function(response){$scope.examData=response.data},function(error){console.error(error)})}),angular.module("RadCalc.services",[]).factory("getDataService",function($q,$http){return{getData:function(){var deferred=$q.defer(),httpPromise=$http.get("/js/data.json");return httpPromise.then(function(response){deferred.resolve(response)},function(error){console.error(error)}),deferred.promise},reformatJsonData:function(jsonData){var examKey,examCategoryKey,exam,examCategoryIndex,examCategory,reformattedExamCategory,reformattedData=this.reformattedDataDefaults(jsonData),keysDoseData=Object.keys(jsonData.DoseData);for(examCategoryIndex in keysDoseData){examCategoryKey=keysDoseData[examCategoryIndex],examCategory=jsonData.DoseData[examCategoryKey],reformattedExamCategory={name:examCategoryKey,exams:[]};for(examKey in examCategory){exam={name:examKey,properties:[]};var examProperties=examCategory[examKey];for(var propertyIndex in examProperties){var propertyName=propertyIndex,propertyGender=this.getGender(propertyName),propertyValue=examProperties[propertyIndex],property={name:propertyName,gender:propertyGender,value:propertyValue};exam.properties.push(property)}reformattedExamCategory.exams.push(exam)}reformattedData.DoseData.push(reformattedExamCategory)}return reformattedData},reformattedDataDefaults:function(jsonData){var reformattedData={};return reformattedData.ConsentNarrative=jsonData.ConsentNarrative,reformattedData.ComparisonDoseSupportingLanguage=jsonData.ComparisonDoseSupportingLanguage,reformattedData.ComparisonDose=jsonData.ComparisonDose,reformattedData.DoseData=[],reformattedData},getGender:function(propertyName){return-1!=propertyName.indexOf("female")?"female":-1!=propertyName.indexOf("mixed")?"mixed":"male"}}});