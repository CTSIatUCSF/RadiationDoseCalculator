angular.module("RadCalc.controllers",[]),angular.module("RadCalc.services",[]),angular.module("RadCalc.directives",[]);var app=angular.module("RadCalc",["RadCalc.services","RadCalc.controllers"]);angular.module("RadCalc.controllers").controller("CTFormCtrl",function($scope,getDataService,edeCalculationService){function defaultTomographyExam(currentCount){return currentCount++,{study_num:currentCount,exam:"",scans:0,soc:!1,gender:"mixed",ede:0}}$scope.form={id:"CT",name:"X-ray Computed Tomography Examinations",headers:["Study","Examination","# Scans","Standard of Care?","Gender Predominance","EDE(mSv)"],exams:[defaultTomographyExam(0)]},$scope.allProcedures=function(categoryId){return getDataService.getAllProcedures(categoryId)},$scope.createRow=function(){$scope.form.exams.push(defaultTomographyExam($scope.form.exams.length))},$scope.submit=function(){console.log($scope.form.exams)},$scope.socLabel=function(value){return value?"Yes":"No"},$scope.calculateEDE=function(exam){if(""===exam.exam||void 0===exam.exam)return 0;var singleScanEDE=getDataService.getProcedurePropertyValue($scope.form.id,exam.exam,exam.gender),unadjustedEDE=edeCalculationService.simpleEdeCalculation(singleScanEDE,exam.scans),decimalPlaces=edeCalculationService.countDecimalPlaces(singleScanEDE),adjustedEDE=edeCalculationService.roundEdeToDecimalPlaces(unadjustedEDE,decimalPlaces);return exam.ede=parseFloat(adjustedEDE),exam.ede}}),angular.module("RadCalc.controllers").controller("CommonFormCtrl",function($scope){$scope.testVariable="This is my test variable!"}),angular.module("RadCalc.controllers").controller("FlouroscopyFormCtrl",function($scope,getDataService,edeCalculationService){function defaultTomographyExam(currentCount){return currentCount++,{study_num:currentCount,exam:"",scans:0,soc:!1,gender:"mixed",minutes:0,ede:0}}$scope.form={id:"Flouro",name:"Flouroscopy Examinations",headers:["Study","Examination","# Scans","Standard of Care?","Gender Predominance","Minutes","EDE(mSv)"],exams:[defaultTomographyExam(0)]},$scope.allProcedures=function(categoryId){return getDataService.getAllProcedures(categoryId)},$scope.createRow=function(){$scope.form.exams.push(defaultTomographyExam($scope.form.exams.length))},$scope.submit=function(){console.log($scope.form.exams)},$scope.socLabel=function(value){return value?"Yes":"No"},$scope.calculateEDE=function(exam){if(""===exam.exam||void 0===exam.exam)return 0;var singleScanEDE=getDataService.getProcedurePropertyValue($scope.form.id,exam.exam,exam.gender),unadjustedEDE=edeCalculationService.simpleEdeCalculation(singleScanEDE,exam.scans);unadjustedEDE*=exam.minutes;var decimalPlaces=edeCalculationService.countDecimalPlaces(singleScanEDE),adjustedEDE=edeCalculationService.roundEdeToDecimalPlaces(unadjustedEDE,decimalPlaces);return exam.ede=parseFloat(adjustedEDE),exam.ede}}),angular.module("RadCalc.controllers").controller("NMFormCtrl",function($scope,getDataService,edeCalculationService){function defaultTomographyExam(currentCount){return currentCount++,{study_num:currentCount,exam:"",scans:0,soc:!1,gender:"mixed",injectedDose:0,ede:0}}$scope.form={id:"NM",name:"Nuclear Medicine Examinations",headers:["Study","Examination","# Scans","Standard of Care?","Gender Predominance","InjectedDose (mCi)","EDE(mSv)"],exams:[defaultTomographyExam(0)]},$scope.allProcedures=function(categoryId){return getDataService.getAllProcedures(categoryId)},$scope.createRow=function(){$scope.form.exams.push(defaultTomographyExam($scope.form.exams.length))},$scope.submit=function(){console.log($scope.form.exams)},$scope.socLabel=function(value){return value?"Yes":"No"},$scope.calculateEDE=function(exam){if(""===exam.exam||void 0===exam.exam)return 0;var singleScanEDE=getDataService.getProcedurePropertyValue($scope.form.id,exam.exam,exam.gender),unadjustedEDE=edeCalculationService.simpleEdeCalculation(singleScanEDE,exam.scans);unadjustedEDE*=exam.injectedDose;var decimalPlaces=edeCalculationService.countDecimalPlaces(singleScanEDE),adjustedEDE=edeCalculationService.roundEdeToDecimalPlaces(unadjustedEDE,decimalPlaces);return exam.ede=parseFloat(adjustedEDE),exam.ede}}),angular.module("RadCalc.controllers").controller("XRayFormCtrl",function($scope,getDataService,edeCalculationService){function defaultTomographyExam(currentCount){return currentCount++,{study_num:currentCount,exam:"",scans:0,soc:!1,gender:"mixed",ede:0}}$scope.form={id:"XRay",name:"X-ray Examinations",headers:["Study","Examination","# Scans","Standard of Care?","Gender Predominance","EDE(mSv)"],exams:[defaultTomographyExam(0)]},$scope.allProcedures=function(categoryId){return getDataService.getAllProcedures(categoryId)},$scope.createRow=function(){$scope.form.exams.push(defaultTomographyExam($scope.form.exams.length))},$scope.submit=function(){console.log($scope.form.exams)},$scope.socLabel=function(value){return value?"Yes":"No"},$scope.calculateEDE=function(exam){if(""===exam.exam||void 0===exam.exam)return 0;var singleScanEDE=getDataService.getProcedurePropertyValue($scope.form.id,exam.exam,exam.gender),unadjustedEDE=edeCalculationService.simpleEdeCalculation(singleScanEDE,exam.scans),decimalPlaces=edeCalculationService.countDecimalPlaces(singleScanEDE),adjustedEDE=edeCalculationService.roundEdeToDecimalPlaces(unadjustedEDE,decimalPlaces);return exam.ede=parseFloat(adjustedEDE),exam.ede}}),angular.module("RadCalc.services").factory("edeCalculationService",function(){return{simpleEdeCalculation:function(singleEde,scanCount){return singleEde*scanCount},roundEdeToDecimalPlaces:function(unadjustedEDE,decimalPlaces){return unadjustedEDE.toFixed(decimalPlaces)},countDecimalPlaces:function(value){var valueString=""+value,ary=valueString.split(".");return ary.length<2?0:ary[1].length}}}),angular.module("RadCalc.services").factory("getDataService",function($q,$http){var getData,data={};return getData=function(){var deferred=$q.defer(),httpPromise=$http.get("/js/data.json");return httpPromise.then(function(response){deferred.resolve(response)},function(error){console.error(error)}),deferred.promise},getData().then(function(response){data=response.data},function(error){console.error(error)}),{data:getData,getAllProcedures:function(categoryID){for(var categoryIndex in data.DoseData){var category=data.DoseData[categoryIndex];if(category.name==categoryID)return category.exams}},getProcedure:function(categoryID,procedureName){var allProcedures=this.getAllProcedures(categoryID);for(var procedureIndex in allProcedures){var procedure=allProcedures[procedureIndex];if(procedure.name==procedureName)return procedure}},getAllProcedureProperties:function(categoryID,procedureName){var procedure=this.getProcedure(categoryID,procedureName);return procedure.properties},getProcedurePropertyValue:function(categoryID,procedureName,genderPredominance){var properties=this.getAllProcedureProperties(categoryID,procedureName);for(var propertyIndex in properties){var property=properties[propertyIndex];if(property.gender==genderPredominance)return property.value}}}});